{"ast":null,"code":"var _jsxFileName = \"/home/intern/Projects/emoji-hex-game/src/components/Canvas.js\";\nimport React from 'react';\nimport \"../styles/Canvas.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Objects extends React.Component {}\n\nexport default class Field extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.fieldWidth = 15;\n    this.fieldHeight = 10;\n    this.hexSize = 100;\n    this.hexHeight = 1.1547;\n    this.ySize = 1;\n    this.fieldX = 0;\n    this.fieldY = -this.hexHeight / 4 * this.hexSize * this.ySize;\n    this.objects = new Array(10);\n  }\n\n  DrawGrid() {\n    for (let i = 0; i < this.fieldHeight; i++) {\n      for (let j = 0; j < this.fieldWidth; j++) {\n        this.DrawHex(this.canvasHex, this.fieldX + this.hexSize * 0.5 + j * this.hexSize + i % 2 * this.hexSize / 2, this.fieldY + (this.hexSize * (3 * this.hexHeight / 4) + i * this.hexSize * (3 * this.hexHeight / 4)) * this.ySize);\n      }\n    }\n  }\n\n  DrawHex(canvasID, x, y) {\n    let start = this.Point(x, y - this.hexHeight / 2 * this.hexSize * this.ySize);\n    let end = this.Point(x - this.hexSize / 2, y - this.hexHeight / 4 * this.hexSize * this.ySize);\n    this.drawLine(canvasID, start, end);\n    start = end;\n    end = this.Point(x - this.hexSize / 2, y + this.hexHeight / 4 * this.hexSize * this.ySize);\n    this.drawLine(canvasID, start, end);\n    start = end;\n    end = this.Point(x, y + this.hexHeight / 2 * this.hexSize * this.ySize);\n    this.drawLine(canvasID, start, end);\n    start = end;\n    end = this.Point(x + this.hexSize / 2, y + this.hexHeight / 4 * this.hexSize * this.ySize);\n    this.drawLine(canvasID, start, end);\n    start = end;\n    end = this.Point(x + this.hexSize / 2, y - this.hexHeight / 4 * this.hexSize * this.ySize);\n    this.drawLine(canvasID, start, end);\n    start = end;\n    end = this.Point(x, y - this.hexHeight / 2 * this.hexSize * this.ySize);\n    this.drawLine(canvasID, start, end);\n  }\n\n  Point(x, y) {\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  drawLine(canvasID, start, end) {\n    const ctx = canvasID.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.moveTo(start.x, start.y);\n    ctx.lineTo(end.x, end.y);\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  drawImage(img, canvasID, coord, size) {\n    const ctx = canvasID.getContext(\"2d\");\n    ctx.drawImage(img, coord.x, coord.y, size.x, size.y);\n  }\n\n  componentWillMount() {\n    this.setState({\n      canvasSize: {\n        canvasWidth: 1600,\n        canvasHeight: 900\n      }\n    });\n  }\n\n  componentDidMount() {\n    const {\n      canvasWidth,\n      canvasHeight\n    } = this.state.canvasSize;\n    this.canvasHex.width = canvasWidth;\n    this.canvasHex.height = canvasHeight;\n    this.DrawGrig();\n    let coord = this.Point(500, 500);\n    let size = this.Point(500, 500);\n    let img = new Image(); //img.src = 'logo192.gif';\n\n    img.src = \"https://img.rosbalt.ru/photobank/1/c/a/0/Z8X2VMCx.jpg\"; //img.src = \"https://drive.google.com/file/d/1u1Q0DcH4KSxizeFUR0_Zx1JMniccLjWq/view?usp=sharing\";\n    //img.src = \"https://drive.google.com/file/d/1QXFSK2yrl74_FmaUK5bO2927ovr4oA6R/view?usp=sharing\";\n    //img.src = \"Z8X2VMCx.jpg\";\n    //img.src = \"smile.jpg\";\n\n    img.onload = () => this.drawImage(img, this.canvasHex, coord, size);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasHex => this.canvasHex = canvasHex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/intern/Projects/emoji-hex-game/src/components/Canvas.js"],"names":["React","Objects","Component","Field","fieldWidth","fieldHeight","hexSize","hexHeight","ySize","fieldX","fieldY","objects","Array","DrawGrid","i","j","DrawHex","canvasHex","canvasID","x","y","start","Point","end","drawLine","ctx","getContext","beginPath","moveTo","lineTo","stroke","closePath","drawImage","img","coord","size","componentWillMount","setState","canvasSize","canvasWidth","canvasHeight","componentDidMount","state","width","height","DrawGrig","Image","src","onload","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"../styles/Canvas.css\";\n\nclass Objects extends React.Component{\n\n}\n\nexport default class Field extends React.Component{\n\n    fieldWidth = 15;\n    fieldHeight = 10;\n    hexSize = 100;\n    hexHeight = 1.1547;\n    ySize = 1;\n    fieldX = 0;\n    fieldY = -this.hexHeight / 4 * this.hexSize * this.ySize;\n    objects = new Array(10);\n\n    DrawGrid(){\n        \n        for (let i = 0; i < this.fieldHeight; i++) {\n            for (let j = 0; j < this.fieldWidth; j++) {\n                this.DrawHex(this.canvasHex,\n                    this.fieldX + this.hexSize*0.5+j*this.hexSize + (i%2) * this.hexSize / 2,\n                    this.fieldY + (this.hexSize * (3 * this.hexHeight / 4) + i * this.hexSize *  (3 * this.hexHeight / 4)) * this.ySize);\n            }\n        }\n    }\n\n\n\n    DrawHex(canvasID, x, y){\n\n        let start = this.Point( x, y - (this.hexHeight / 2) * this.hexSize * this.ySize);\n        let end = this.Point( x - this.hexSize / 2, y - (this.hexHeight / 4) * this.hexSize * this.ySize);\n        this.drawLine(canvasID, start, end);\n        \n        start = end;\n        end = this.Point( x - this.hexSize / 2, y + (this.hexHeight / 4) * this.hexSize * this.ySize);\n        this.drawLine(canvasID, start, end);\n\n        start = end;\n        end = this.Point( x, y + (this.hexHeight / 2) * this.hexSize * this.ySize);\n        this.drawLine(canvasID, start, end);            \n        \n        start = end;\n        end = this.Point( x + this.hexSize / 2, y + (this.hexHeight / 4) * this.hexSize * this.ySize);\n        this.drawLine(canvasID, start, end);   \n        \n        start = end;\n        end = this.Point( x + this.hexSize / 2, y - (this.hexHeight / 4) * this.hexSize * this.ySize);\n        this.drawLine(canvasID, start, end);  \n\n        start = end;\n        end = this.Point( x, y - (this.hexHeight / 2) * this.hexSize * this.ySize); \n        this.drawLine(canvasID, start, end);  \n    }\n\n    Point(x, y){\n        return {x: x, y: y}\n    }\n\n    drawLine(canvasID, start, end){\n        const ctx = canvasID.getContext(\"2d\");\n        ctx.beginPath();\n        ctx.moveTo(start.x, start.y);\n        ctx.lineTo(end.x, end.y);\n        ctx.stroke();\n        ctx.closePath();\n    }\n\n    drawImage(img, canvasID, coord, size){\n        const ctx = canvasID.getContext(\"2d\");\n        ctx.drawImage(img, coord.x, coord.y, size.x, size.y);\n    }\n\n    componentWillMount() {\n        this.setState({\n            canvasSize: {canvasWidth: 1600, canvasHeight: 900}\n        })\n    }\n\n    componentDidMount(){\n        const {canvasWidth, canvasHeight} = this.state.canvasSize;\n        this.canvasHex.width = canvasWidth;\n        this.canvasHex.height = canvasHeight;\n        this.DrawGrig();\n        let coord = this.Point(500, 500);\n        let size = this.Point(500, 500);\n        let img = new Image();\n        //img.src = 'logo192.gif';\n        img.src = \"https://img.rosbalt.ru/photobank/1/c/a/0/Z8X2VMCx.jpg\";\n        //img.src = \"https://drive.google.com/file/d/1u1Q0DcH4KSxizeFUR0_Zx1JMniccLjWq/view?usp=sharing\";\n        //img.src = \"https://drive.google.com/file/d/1QXFSK2yrl74_FmaUK5bO2927ovr4oA6R/view?usp=sharing\";\n        //img.src = \"Z8X2VMCx.jpg\";\n        //img.src = \"smile.jpg\";\n        img.onload = () => this.drawImage(img, this.canvasHex, coord, size);\n\n    }\n\n    render(){\n        return (\n        <div>\n        <canvas ref={canvasHex => this.canvasHex=canvasHex}></canvas>\n        </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}