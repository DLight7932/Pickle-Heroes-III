{"ast":null,"code":"var _jsxFileName = \"/home/intern/Projects/emoji-hex-game/src/components/Canvas.js\";\nimport React from 'react';\nimport \"../styles/Canvas.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Field extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fieldWidth = 15;\n    this.fieldHeight = 10;\n    this.hexSize = 100;\n    this.hexHeight = 1.1547;\n    this.ySize = 1;\n    this.fieldX = 0;\n    this.fieldY = -this.hexHeight / 4 * this.hexSize * this.ySize;\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n  }\n\n  DrawGrid() {\n    for (let i = 0; i < this.fieldHeight; i++) {\n      for (let j = 0; j < this.fieldWidth; j++) {\n        this.DrawHex(this.canvasHex, this.Point(j, i));\n      }\n    }\n  }\n\n  DrawHex(canvasID, index, color) {\n    let coord = this.IndexToPixel(index);\n    let start = this.Point(coord.x, coord.y - this.hexHeight / 2 * this.hexSize * this.ySize);\n    let end = this.Point(coord.x - this.hexSize / 2, coord.y - this.hexHeight / 4 * this.hexSize * this.ySize);\n    this.drawLine(canvasID, start, end, color);\n    start = end;\n    end = this.Point(coord.x - this.hexSize / 2, coord.y + this.hexHeight / 4 * this.hexSize * this.ySize);\n    this.drawLine(canvasID, start, end, color);\n    start = end;\n    end = this.Point(coord.x, coord.y + this.hexHeight / 2 * this.hexSize * this.ySize);\n    this.drawLine(canvasID, start, end, color);\n    start = end;\n    end = this.Point(coord.x + this.hexSize / 2, coord.y + this.hexHeight / 4 * this.hexSize * this.ySize);\n    this.drawLine(canvasID, start, end, color);\n    start = end;\n    end = this.Point(coord.x + this.hexSize / 2, coord.y - this.hexHeight / 4 * this.hexSize * this.ySize);\n    this.drawLine(canvasID, start, end, color);\n    start = end;\n    end = this.Point(coord.x, coord.y - this.hexHeight / 2 * this.hexSize * this.ySize);\n    this.drawLine(canvasID, start, end, color);\n  }\n\n  Point(x, y) {\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  PixelToIndex(p) {\n    return this.Point(Math.floor(p.x / this.hexSize), Math.floor(p.y / this.hexHeight));\n  }\n\n  IndexToPixel(i) {\n    return this.Point(this.fieldX + this.hexSize * 0.5 + i.x * this.hexSize + i.y % 2 * this.hexSize / 2, this.fieldY + (this.hexSize * (3 * this.hexHeight / 4) + i.y * this.hexSize * (3 * this.hexHeight / 4)) * this.ySize);\n  }\n\n  drawLine(canvasID, start, end, color) {\n    const ctx = canvasID.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.moveTo(start.x, start.y);\n    ctx.strokeStyle = color;\n    ctx.lineTo(end.x, end.y);\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  drawImage(img, canvasID, coord, size) {\n    const ctx = canvasID.getContext(\"2d\");\n    ctx.drawImage(img, coord.x, coord.y, size.x, size.y);\n  }\n\n  componentWillMount() {\n    this.setState({\n      canvasSize: {\n        canvasWidth: 1600,\n        canvasHeight: 900\n      }\n    });\n  }\n\n  componentDidMount() {\n    const {\n      canvasWidth,\n      canvasHeight\n    } = this.state.canvasSize;\n    this.canvasHex.width = canvasWidth;\n    this.canvasHex.height = canvasHeight;\n    this.DrawGrid();\n    let coord = this.Point(500, 500);\n    let size = this.Point(500, 500);\n    let img = new Image(); //img.src = 'logo192.gif';\n    //img.src = \"https://drive.google.com/file/d/1u1Q0DcH4KSxizeFUR0_Zx1JMniccLjWq/view?usp=sharing\";\n    //img.src = \"https://drive.google.com/file/d/1QXFSK2yrl74_FmaUK5bO2927ovr4oA6R/view?usp=sharing\";\n    //img.src = \"Z8X2VMCx.jpg\";\n    //img.src = \"smile.jpg\";\n    //img.src = \"https://img.rosbalt.ru/photobank/1/c/a/0/Z8X2VMCx.jpg\";\n    //img.onload = () => this.drawImage(img, this.canvasHex, coord, size);\n  }\n\n  Distance(p1, p2) {\n    return Math.sqrt(Math.pow(Math.abs(p1.x) - Math.abs(p2.x)) + Math.pow(Math.abs(p1.y) - Math.abs(p2.y)));\n  }\n\n  MouseIndex(mouse) {\n    let base = this.Point(Math.floor(mouse.x / this.hexSize), Math.floor(mouse.y / (this.hexHeight * this.hexSize * 3 / 4))); //console.log(base);\n    //console.log(mouse);\n\n    let p11 = this.Point(base.x + base.y % 2, base.y);\n    let p12 = this.Point(base.x + base.y % 2, base.y);\n    let p21 = this.Point(base.x + (base.y + 1) % 2, base.y + 1);\n    let p22 = this.Point(base.x + (base.y + 1) % 2, base.y + 1);\n    return p11;\n    return base;\n  }\n\n  handleMouseMove(e) {\n    this.DrawHex(this.canvasHex, this.MouseIndex(this.Point(e.pageX, e.pageY)), \"lime\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasHex => this.canvasHex = canvasHex,\n        onMouseMove: this.handleMouseMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/intern/Projects/emoji-hex-game/src/components/Canvas.js"],"names":["React","Field","Component","constructor","props","fieldWidth","fieldHeight","hexSize","hexHeight","ySize","fieldX","fieldY","handleMouseMove","bind","DrawGrid","i","j","DrawHex","canvasHex","Point","canvasID","index","color","coord","IndexToPixel","start","x","y","end","drawLine","PixelToIndex","p","Math","floor","ctx","getContext","beginPath","moveTo","strokeStyle","lineTo","stroke","closePath","drawImage","img","size","componentWillMount","setState","canvasSize","canvasWidth","canvasHeight","componentDidMount","state","width","height","Image","Distance","p1","p2","sqrt","pow","abs","MouseIndex","mouse","base","p11","p12","p21","p22","e","pageX","pageY","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"../styles/Canvas.css\";\n\nexport default class Field extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n    }\n\n    fieldWidth = 15;\n    fieldHeight = 10;\n    hexSize = 100;\n    hexHeight = 1.1547;\n    ySize = 1;\n    fieldX = 0;\n    fieldY = -this.hexHeight / 4 * this.hexSize * this.ySize;\n\n    DrawGrid(){\n        for (let i = 0; i < this.fieldHeight; i++) {\n            for (let j = 0; j < this.fieldWidth; j++) {\n                this.DrawHex(this.canvasHex, this.Point(j, i), );\n            }\n        }\n    }\n\n    DrawHex(canvasID, index, color){\n        let coord = this.IndexToPixel(index);\n\n        let start = this.Point(coord.x, coord.y - (this.hexHeight / 2) * this.hexSize * this.ySize);\n        let end = this.Point(coord.x - this.hexSize / 2, coord.y - (this.hexHeight / 4) * this.hexSize * this.ySize);\n        this.drawLine(canvasID, start, end, color);\n        \n        start = end;\n        end = this.Point(coord.x - this.hexSize / 2, coord.y + (this.hexHeight / 4) * this.hexSize * this.ySize);\n        this.drawLine(canvasID, start, end, color);\n\n        start = end;\n        end = this.Point(coord.x, coord.y + (this.hexHeight / 2) * this.hexSize * this.ySize);\n        this.drawLine(canvasID, start, end, color);            \n        \n        start = end;\n        end = this.Point(coord.x + this.hexSize / 2, coord.y + (this.hexHeight / 4) * this.hexSize * this.ySize);\n        this.drawLine(canvasID, start, end, color);   \n        \n        start = end;\n        end = this.Point(coord.x + this.hexSize / 2, coord.y - (this.hexHeight / 4) * this.hexSize * this.ySize);\n        this.drawLine(canvasID, start, end, color);  \n\n        start = end;\n        end = this.Point(coord.x, coord.y - (this.hexHeight / 2) * this.hexSize * this.ySize); \n        this.drawLine(canvasID, start, end, color);  \n    }\n\n    Point(x, y){\n        return {x: x, y: y}\n    }\n\n    PixelToIndex(p){\n        return this.Point(Math.floor(p.x / this.hexSize), Math.floor(p.y / this.hexHeight));\n    }\n\n    IndexToPixel(i){\n        return this.Point(\n            this.fieldX + this.hexSize * 0.5 + i.x * this.hexSize + (i.y % 2) * this.hexSize / 2,\n            this.fieldY + (this.hexSize * (3 * this.hexHeight / 4) + i.y * this.hexSize * (3 * this.hexHeight / 4)) * this.ySize\n            );\n    }\n\n    drawLine(canvasID, start, end, color){\n        const ctx = canvasID.getContext(\"2d\");\n        ctx.beginPath();\n        ctx.moveTo(start.x, start.y);\n        ctx.strokeStyle = color;\n        ctx.lineTo(end.x, end.y);\n        ctx.stroke();\n        ctx.closePath();\n    }\n\n    drawImage(img, canvasID, coord, size){\n        const ctx = canvasID.getContext(\"2d\");\n        ctx.drawImage(img, coord.x, coord.y, size.x, size.y);\n    }\n\n    componentWillMount(){\n        this.setState({\n            canvasSize: {canvasWidth: 1600, canvasHeight: 900}\n        })\n    }\n\n    componentDidMount(){\n        const {canvasWidth, canvasHeight} = this.state.canvasSize;\n        this.canvasHex.width = canvasWidth;\n        this.canvasHex.height = canvasHeight;\n        this.DrawGrid();\n        let coord = this.Point(500, 500);\n        let size = this.Point(500, 500);\n        let img = new Image();\n        //img.src = 'logo192.gif';\n        //img.src = \"https://drive.google.com/file/d/1u1Q0DcH4KSxizeFUR0_Zx1JMniccLjWq/view?usp=sharing\";\n        //img.src = \"https://drive.google.com/file/d/1QXFSK2yrl74_FmaUK5bO2927ovr4oA6R/view?usp=sharing\";\n        //img.src = \"Z8X2VMCx.jpg\";\n        //img.src = \"smile.jpg\";\n\n        //img.src = \"https://img.rosbalt.ru/photobank/1/c/a/0/Z8X2VMCx.jpg\";\n        //img.onload = () => this.drawImage(img, this.canvasHex, coord, size);\n    }\n\n    Distance(p1, p2){\n        return Math.sqrt(Math.pow(Math.abs(p1.x) - Math.abs(p2.x)) + Math.pow(Math.abs(p1.y) - Math.abs(p2.y)));\n    }\n\n    MouseIndex(mouse){\n        let base = this.Point(\n            Math.floor(mouse.x / this.hexSize),\n            Math.floor(mouse.y / (this.hexHeight * this.hexSize * 3 / 4))\n            );\n        //console.log(base);\n        //console.log(mouse);\n        let p11 = this.Point(base.x + (base.y % 2), base.y);\n        let p12 = this.Point(base.x + (base.y % 2), base.y);\n        let p21 = this.Point(base.x + ((base.y + 1) % 2), base.y + 1);\n        let p22 = this.Point(base.x + ((base.y + 1) % 2), base.y + 1);\n        return p11;\n        return base;\n    }\n\n    handleMouseMove(e){\n        this.DrawHex(this.canvasHex, this.MouseIndex(this.Point(e.pageX, e.pageY)), \"lime\");\n    }\n\n    render(){\n        return (\n        <div>\n        <canvas ref={canvasHex => this.canvasHex=canvasHex} onMouseMove = {this.handleMouseMove}></canvas>\n        </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}